{"version":3,"sources":["src/index.js"],"names":["storage","window","localStorage","serviceWorkerPath","navigator","serviceWorker","register","persistedSettings","getItem","settings","JSON","parse","e","app","Elm","Main","init","flags","ports","settingsUpdated","subscribe","stringify","Object","assign","version","setItem"],"mappings":";;;AAgBA,aAhBA,IAAA,EAAA,QAAA,cAEMA,EAAUC,OAAOC,aACjBC,EAAoB,oBAE1BC,UAAUC,cAAcC,SAASH,GAEjC,IAAMI,EAAoBP,EAAQQ,QAAQ,YACtCC,EAAW,KACf,IACEA,EAAWC,KAAKC,MAAMJ,GACtB,MAAOK,IAGT,IAAMC,EAAMC,EAAIC,IAAAA,KAAKC,KAAK,CAAEC,MAAOR,IAEnCI,EAAIK,MAAMC,gBAAgBC,UAAU,SAACX,GAC7BF,IAAAA,EAAoBG,KAAKW,UAAUC,OAAOC,OAAO,CAAEC,QAAS,MAAQf,IAC1ET,EAAQyB,QAAQ,WAAYlB","file":"src.e29e6b74.js","sourceRoot":"..","sourcesContent":["import { Elm } from './Main.elm';\n\nconst storage = window.localStorage;\nconst serviceWorkerPath = \"service-worker.js\";\n\nnavigator.serviceWorker.register(serviceWorkerPath);\n\nconst persistedSettings = storage.getItem('settings');\nlet settings = null;\ntry {\n  settings = JSON.parse(persistedSettings);\n} catch (e) {\n}\n\nconst app = Elm.Main.init({ flags: settings });\n\napp.ports.settingsUpdated.subscribe((settings) => {\n  const persistedSettings = JSON.stringify(Object.assign({ version: \"v1\" }, settings));\n  storage.setItem('settings', persistedSettings);\n});\n"]}